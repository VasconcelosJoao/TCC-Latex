@manual{inmetro2003,
	Author = {INMETRO},
	Title = {Vocabulário internacional de termos fundamentais e gerais de
	metrologia},
	Year = {2013},
	Address = {Rio de Janeiro, Brasil},
	Pages = {75},
	isbn = {85-87090-90-9},
}

@inproceedings{soviero1997,
	Author = {P. A. O. Soviero and L. G. M. Lavagna},
	Title = {A Numerical Model for Thin Airfoils in Unsteady Motion},
	Year = {1997},
	Pages = {332-340},
	Volume = {19},
	Number = {3},
	Booktitle = {Journal of the Brazilian Societyt Mechanical Sciences},	
}

@inproceedings{sparrow1980,
	Author = {E. M. Sparrow},
	Title = {Forced Convection Heat Transfer in a Duct Having Spanwise-Periodic
	Rectangular Protuberances},
	Year = {1980},
	Pages = {149-167},
	Volume = {3},
	Booktitle = {Numerical Heat Transfer},
}

@article{clark1986,
	Author = {J. A. Clark},
	Title = {Private Communication},
	Year = {1986},
	Address = {University of Michigan},
}

@article{arruda2007,
	Author = {M. B. B. Arruda},
	Title = {Como fazer referências: bibliográficas, eletrônicas e demais
	formas de documentos},
	Year = {2007},
	Url = {http://bu.ufsc.br/framerefer.html}
}

@article{coimbra1978,
	Author = {A. L. Coimbra},
	Title = {Lessons of Continuum Mechanics},
	Year = {1978},
	Address = {São Paulo, Brazil},
	Pages = {428},
	Editor = {Edgard Blücher},
}

@inproceedings{bordalo1989,
	Author = {S. N. Bordalo and J. H. Ferziger and S. J. Kline},
	Title = {The Development of Zonal Models for Turbulence},
	Year = {1989},
	Pages = {41-44},
	Booktitle = {Proceedings of the 10th Brazilian Congress of Mechanical
	Engineering}, 
	Volume = {1},	
}

@manual{NBR14724:2011,
	Address = {Rio de Janeiro},
	Date-Added = {2012-12-15 20:34:08 +0000},
	Date-Modified = {2012-12-15 20:35:25 +0000},
	Month = mar,
	Org-Short = {ABNT},
	Organization = {Associa{\c c}\~ao Brasileira de Normas T\'ecnicas},
	Pages = 15,
	Subtitle = {Informa{\c c}\~ao e documenta{\c c}\~ao --- trabalhos acad\^emicos --- apresenta{\c c}\~ao},
	Title = {{NBR} 14724},
	Year = 2011
}

@manual{NBR6034:2000,
	Address = {Rio de Janeiro},
	Org-Short = {ABNT},
	Organization = {Associa{\c c}\~ao Brasileira de Normas T\'ecnicas},
	Subtitle = {Informa{\c c}\~ao e documenta{\c c}\~ao --- Referências},
	Title = {{NBR} 14724},
	Year = 2000
}

@book{Sommerville2007,
	author = {Sommerville, Ian},
	title = {Software Engineering},
	year = {2007},
	isbn = {978-0-321-31379-9, 0-321-31379-8},
	edition = {9th},
	publisher = {Addison-Wesley Publishing Company},
	address = {USA},
}


@article{McCall2019,
	abstract = {The types of programming errors that novice programmers make and struggle to resolve have long been of interest to researchers. Various past studies have analyzed the frequency of compiler diagnostic messages. This information, however, does not have a direct correlation to the types of errors students make, due to the inaccuracy and imprecision of diagnostic messages. Furthermore, few attempts have been made to determine the severity of different kinds of errors in terms other than frequency of occurrence. Previously, we developed a method for meaningful categorization of errors, and produced a frequency distribution of these error categories; in this article, we extend the previous method to also make a determination of error difficulty, in order to give a better measurement of the overall severity of different kinds of errors. An error category hierarchy was developed and validated, and errors in snapshots of students source code were categorized accordingly. The result is a frequency table of logical error categories rather than diagnostic messages. Resolution time for each of the analyzed errors was calculated, and the average resolution time for each category of error was determined; this defines an error difficulty score. The combination of frequency and difficulty allow us to identify the types of error that are most problematic for novice programmers. The results show that ranking errors by severity-a product of frequency and difficulty-yields a significantly different ordering than ranking them by frequency alone, indicating that error frequency by itself may not be a suitable indicator for which errors are actually the most problematic for students.},
	author = {Davin McCall and Michael Kölling},
	doi = {10.1145/3335814},
	issn = {19466226},
	issue = {4},
	journal = {ACM Transactions on Computing Education},
	keywords = {Java,Novice programmers,Programming errors},
	month = {7},
	publisher = {Association for Computing Machinery},
	title = {A new look at novice programmer errors},
	volume = {19},
	year = {2019},
}

@article{Jose2023,
	abstract = {Databases have a large amount of information that can be accessed by the structured query language (SQL), but this language requires technical knowledge. An alternative to facilitating access to this information is to use natural language to make queries, and an artificial intelligence model to translate to SQL. Transformer-based language models have been incredibly successful in this regard. However, transformers are limited by the size of the input text; therefore, long sentences can interfere with the quality of the results. We present two techniques to improve results. The first is an innovative technique that allows long-text sequences to be handled by transformers with up to 512 input tokens. We run database schema pruning (removal of table names and column names that are useless for the query of interest) during a fine-tuning process. The second technique is a multilingual approach. The model is fine-tuned using a data-augmented Spider dataset [a specialized dataset for Natural Language to SQL (NL2SQL)] in four languages simultaneously: English, Portuguese, Spanish, and French. The combination of these techniques allowed an increase in the exact set match accuracy results from 0.718 to 0.736 in our validation dataset. The process of improving results is challenging because NL2SQL techniques are already significantly optimized, and the two techniques presented here are important because they are applied in the training dataset, allowing them to be used with any current technique. Source code, evaluations, and checkpoints are available at https://github.com/C4AI/gap-text2sql .},
	author = {Marcelo Archanjo Jose and Fabio Gagliardi Cozman},
	doi = {10.1007/s41870-023-01342-3},
	issn = {25112112},
	issue = {6},
	journal = {International Journal of Information Technology (Singapore)},
	keywords = {Databases,Deep learning,Natural language process,Neural network,SQL generation,Semantic parsing,Spider dataset,Text-to-SQL,Transformers,Transformers self-attention},
	month = {8},
	pages = {3015-3023},
	publisher = {Springer Science and Business Media B.V.},
	title = {A multilingual translator to SQL with database schema pruning to improve self-attention},
	volume = {15},
	year = {2023},
}

@article{Gerhardt2009,
	author = {Tatiana Engel Gerhardt and Denise Tolfo Silveira},
	title  = {Métodos de pesquisa.},
	url    = {http://hdl.handle.net/10183/52806},
	year   = {2009}
}

@article{Serzedello_Tomael_2011,
	title   = {Produção tecnológica da Universidade Estadual de Londrina (UEL): Mapeamento da área de Ciências Agrárias pela Plataforma Lattes},
	volume  = {1},
	url     = {https://revistas.ufpr.br/atoz/article/view/41281},
	doi     = {10.5380/atoz.v1i1.41281},
	number  = {1},
	journal = {AtoZ: novas práticas em informação e conhecimento},
	author  = {Serzedello, Natan Tiago Batista and Tomaél, Maria Inês},
	year    = {2011},
	month   = {jun},
	pages   = {23--37}
}

@inproceedings{Miedema2021,
	abstract = {SQL is the most commonly taught database query language. While previous research has investigated the errors made by novices during SQL query formulation, the underlying causes for these errors have remained unexplored. Understanding the basic misconceptions held by novices which lead to these errors would help improve how we teach query languages to our students. In this paper we aim to identify the misconceptions that might be the causes of documented SQL errors that novices make. To this end, we conducted a qualitative think-aloud study to gather information on the thinking process of university students while solving query formulation problems. With the queries in hand, we analyzed the underlying causes for the errors made by our participants. In this paper we present the identified SQL misconceptions organized into four top-level categories: misconceptions based in previous course knowledge, generalization-based misconceptions, language-based misconceptions, and misconceptions due to an incomplete or incorrect mental model. A deep exploration of misconceptions can uncover gaps in instruction. By drawing attention to these, we aim to improve SQL education.},
	author = {Miedema, Daphne and Aivaloglou, Efthimia and Fletcher, George},
	isbn = {9781450383264},
	booktitle = {Proceedings of the 17th ACM Conference on International Computing Education Research},
	keywords = {novice, misconception, error, SQL},
	pages = {355–367},
	address = {New York, NY, USA},
	url = {https://doi.org/10.1145/3446871.3469759},
	numpages = {13},
	location = {Virtual Event, USA},
	series = {ICER 2021},
	title = {Identifying SQL Misconceptions of Novices: Findings from a Think-Aloud Study},
	year = {2021},
}

@article{fcf8d266-68a0-32db-a96a-421d1ad1e9d9,
	ISSN = {00206598, 14682354},
	URL = {http://www.jstor.org/stable/2525729},
	author = {Otto Eckstein and Edward W. Green and Allen Sinai},
	journal = {International Economic Review},
	number = {3},
	pages = {595--615},
	publisher = {[Economics Department of the University of Pennsylvania, Wiley, Institute of Social and Economic Research, Osaka University]},
	title = {The Data Resources Model: Uses, Structure, and Analysis of the U.S. Economy},
	urldate = {2024-11-30},
	volume = {15},
	year = {1974}
}

@inproceedings{Silva2020,
   abstract = {O aprendizado inicial de algoritmos se torna mais árduo quando a linguagem de programação utilizada possui comandos em uma língua estrangeira não dominada pelo aluno. O propósito deste estudo é compreender o impacto do uso da linguagem nativa do aprendiz nos estudos iniciais de programação. Um questionário foi aplicado ao final de quatro semestres consecutivos de um curso introdutório de programação e cinco perguntas foram selecionadas para o identificar nível de satisfação dos alunos e a eficiência do processo educacional. Os resultados obtidos mostram que a maior parte dos alunos entrevistados se mostrou satisfeita, teve as suas expectativas atendidas e recomenda a metodologia utilizada.},
   author = {Geovana Silva and Giovanni Santos and Vandor Rissoli},
   doi = {10.5753/cbie.sbie.2020.1803},
   month = {11},
   pages = {1803-1812},
   publisher = {Sociedade Brasileira de Computacao - SB},
   title = {A Importância da Linguagem Nativa para a Aprendizagem Significativa em Lógica de Programação},
   year = {2020},
}

@book{10.5555/1076267,
author = {Beck, Kent and Andres, Cynthia},
title = {Extreme Programming Explained: Embrace Change (2nd Edition)},
year = {2004},
isbn = {0321278658},
publisher = {Addison-Wesley Professional},
abstract = {Whether you have a small team that is already closely aligned with your customers or a large team in a gigantic or multinational organization, you will find in these pages a wealth of ideas to challenge, inspire, and encourage you and your team members to substantially improve your software development.You will discover how to: Involve the whole team-XP style Increase technical collaboration through pair programming and continuous integration Reduce defects through developer testing Align business and technical decisions through weekly and quarterly planning Improve teamwork by setting up an informative, shared workspaceYou will also find many other concrete ideas for improvement, all based on a philosophy that emphasizes simultaneously increasing the humanity and effectiveness of software development.Every team can improve. Every team can begin improving today. Improvement is possible-beyond what we can currently imagine. Extreme Programming Explained, Second Edition, offers ideas to fuel your improvement for years to come.}
}